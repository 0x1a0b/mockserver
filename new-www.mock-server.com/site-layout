- what is mockserver
	- server & proxy ....
- why use mockserver
	- mocking, separating teams, etc
- how do you use mockserver
	- overview
	  	- server & client
	  	- different types of servers
	  	- different types of clients
	- running mock server
		- java
			- programmatically (@Before & @After)
			- JUnit @Rule
			- maven plugin
				- test listener (for build failers)
			- deployable WAR
			- Vert.X module
		- grunt
			- grunt plugin
		- node
			- npm module
		- docker
			- docker container
		- command line
			- jar-with-dependencies
			- Vert.X module
	- creating expectations
		- overview
	  		- java
	  		- js (in browser)
	  		- js (in node)
	  		- ruby
	  	- request matchers
	  		- java
	  		- js (in browser)
	  		- js (in node)
	  		- ruby
	  	- actions
	  		- java
	  		- js (in browser)
	  		- js (in node)
	  		- ruby
	- verifications
		- overview
	  		- java
	  		- js (in browser)
	  		- js (in node)
	  		- ruby
		- individual requests
	  		- java
	  		- js (in browser)
	  		- js (in node)
	  		- ruby
		- request sequences
	  		- java
	  		- js (in browser)
	  		- js (in node)
	  		- ruby
	- clearing & resetting
	- running tests in parallel
  	- debugging issues
- how do you use the proxy
	- overview
		- analysing system behaviour
		- generating starter code for MockServer
		- verifications
	- setting up proxy
		- java
			- Jetty HttpClient 9.x
			- Jetty HttpClient 8.x
			- Apache HttpClient
			- Jersey
			- Spring Rest Template
			- Grizzly
		- js
			- chrome
			- node 
	- viewing dump recorded interactions
		- dump to log
		- retrieve via http
	- verifications (repeated from above)
- MockServer & Proxy API
	- list each endpoint
- where is MockServer
	- downloads
	- github
	- maven central
	- ruby gems
	- npm
	- Vert.X Registry
	- Docker
	- Continuous Integration
	- Backlog
- Sitemap