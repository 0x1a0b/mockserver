openapi: 3.0.0
servers:
  - url: 'http://localhost:1080/'
  - url: 'https://localhost:1080/'
info:
  title: Mock Server API
  version: '10.9'
  description: >-
    MockServer enables easy mocking of any system you integrate with via HTTP or
    HTTPS with clients written in Java, JavaScript and Ruby.  MockServer also
    includes a proxy that introspects all proxied traffic including encrypted
    SSL traffic and supports Port Forwarding, Web Proxying (i.e. HTTP proxy),
    HTTPS Tunneling Proxying (using HTTP CONNECT) and SOCKS Proxying (i.e.
    dynamic port forwarding).
  license:
    url: 'https://github.com/jamesdbloom/mockserver/blob/master/LICENSE.md'
    name: Apache 2.0
tags:
  - name: expectation
    description: Create expectations
  - name: verify
    description: Verify requests
  - name: control
    description: Manage MockServer process
paths:
  /status:
    put:
      tags:
        - control
      summary: return listening ports
      responses:
        '200':
          description: MockServer is running and listening on the listed ports
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/jamesdbloom/mockserver/master/mockserver-core/src/main/resources/org/mockserver/model/schema/ports.json
  /bind:
    put:
      tags:
        - control
      summary: bind additional listening ports
      description: only supported on Netty version
      responses:
        '202':
          description: >-
            listening on additional requested ports, note: the response ony
            contains ports added for the request, to list all ports use /status
          content:
            application/json:
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/jamesdbloom/mockserver/master/mockserver-core/src/main/resources/org/mockserver/model/schema/ports.json
        '400':
          description: incorrect request format
        '406':
          description: >-
            unable to bind to ports (i.e. already bound or JVM process doesn't
            have permission)
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                https://raw.githubusercontent.com/jamesdbloom/mockserver/master/mockserver-core/src/main/resources/org/mockserver/model/schema/ports.json
        description: >-
          list of ports to bind to, where 0 indicates dynamically bind to any
          available port
        required: true
  /stop:
    put:
      tags:
        - control
      summary: stop running process
      description: only supported on Netty version
      responses:
        '202':
          description: MockServer process is stopping
  /expectation:
    put:
      tags:
        - expectation
      summary: create expectation
      responses:
        '201':
          description: expectation created
        '400':
          description: incorrect request format
        '406':
          description: invalid expectation
      requestBody:
        content:
          application/json:
            schema:
              title: list of expectations
              type: array
              additionalProperties: false
              items:
                $ref: >-
                  https://raw.githubusercontent.com/jamesdbloom/mockserver/master/mockserver-core/src/main/resources/org/mockserver/model/schema/expectation.json
        description: expectation to create
        required: true
  /clear:
    put:
      tags:
        - expectation
      summary: clears expectations and recorded requests that match the request matcher
      responses:
        '202':
          description: expectations and recorded requests cleared
        '400':
          description: incorrect request format
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                https://raw.githubusercontent.com/jamesdbloom/mockserver/master/mockserver-core/src/main/resources/org/mockserver/model/schema/httpRequest.json
        description: request used to match expectations and recored requests to clear
  /reset:
    put:
      tags:
        - expectation
      summary: clears all expectations and recorded requests
      responses:
        '202':
          description: expectations and recorded requests cleared
  /dumpToLog:
    put:
      tags:
        - expectation
      summary: write all requests to the request log that match the request matcher
      responses:
        '202':
          description: recorded requests written to request log
        '400':
          description: incorrect request format
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                https://raw.githubusercontent.com/jamesdbloom/mockserver/master/mockserver-core/src/main/resources/org/mockserver/model/schema/httpRequest.json
        description: >-
          request used to match which recored requests to write to the request
          log
  /verify:
    put:
      tags:
        - verify
      summary: verify a request has been received a specific number of times
      responses:
        '202':
          description: matching request has been received specified number of times
        '400':
          description: incorrect request format
        '406':
          description: request has not been received specified numbers of times
          content:
            text/plain:
              schema:
                type: string
                description: 'JUnit expected:<...> but was:<...> format'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                https://raw.githubusercontent.com/jamesdbloom/mockserver/master/mockserver-core/src/main/resources/org/mockserver/model/schema/verification.json
        description: request matcher and the number of times to match
        required: true
  /verifySequence:
    put:
      tags:
        - verify
      summary: verify a sequence of request has been received in the specific order
      responses:
        '202':
          description: request sequence has been received in specified order
        '400':
          description: incorrect request format
        '406':
          description: request sequence has not been received in specified order
          content:
            text/plain:
              schema:
                type: string
                description: 'JUnit expected:<...> but was:<...> format'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                https://raw.githubusercontent.com/jamesdbloom/mockserver/master/mockserver-core/src/main/resources/org/mockserver/model/schema/verificationSequence.json
        description: the sequence of requests matchers
        required: true
components:
  schemas: {}