{"version":3,"sources":["store/configureStore.js","actions/index.js","components/RequestFilter.js","components/JsonItem.js","components/LogMessage.js","components/ListHeader.js","containers/LogList.js","containers/JsonList.js","containers/Grid.js","containers/App.js","index.js","reducers/entities.js","reducers/index.js","middleware/socket.js","middleware/exposeState.js","store/configureStore.prod.js"],"names":["module","exports","require","__webpack_require__","d","__webpack_exports__","CONNECT_SOCKET","SEND_MESSAGE","sendMessage","MESSAGE_RECEIVED","webSocketMessageReceived","DISCONNECT_SOCKET","disconnectSocket","message","host","port","secure","dispatch","type","sendWebSocketMessage","entities","filterNullsMultiValue","rawItems","items","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","rawItem","value","valueSet","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","values","err","return","name","push","loadData","_ref","_ref$host","_ref$port","_ref$secure","_ref$requestMatcher","requestMatcher","requestFilter","method","path","keepAlive","headers","queryStringParameters","cookies","enabled","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","filterNullsSingleValue","RequestFilter","renderValues","_ref2","fields","disabled","react_default","a","createElement","style","width","padding","paddingRight","display","verticalAlign","map","field","index","key","Field","fullWidth","component","TextField","hintText","onChange","e","console","log","floatingLabelText","index_es","minWidth","onClick","remove","remove_default","add_default","renderKeysToMultiValues","_ref3","title","color","paddingTop","textAlign","fontFamily","concat","AutoComplete","openOnFocus","filter","MUIAutoComplete","fuzzyFilter","dataSource","FieldArray","_this","mini","renderKeysToValues","_ref4","this","props","nextProps","expanded","margin","actAsExpander","showExpandableButton","backgroundColor","expandable","Toggle","label","labelPosition","marginBottom","paddingLeft","SelectField","primaryText","overflow","Component","selector","formValueSelector","reduxForm","form","initialValues","destroyOnUnmount","mapDispatchToProps","connect","state","requestFilterExpanded","pure","JsonItem","_this$props","_this$props$collapsed","collapsed","_this$props$jsonItem","jsonItem","_this$props$descripti","description","_this$props$display","_this$props$enableCli","enableClipboard","_this$props$textStyle","textStyle","Array","isArray","jsonDiv","json","first","object","second","addDescription","main_default","src","whiteSpace","top","theme","iconStyle","indentWidth","shouldCollapse","displayObjectSize","displayDataTypes","onEdit","onAdd","onDelete","LogMessage","cellStyle","_this2","_this$props$logMessag","logMessage","Object","assign","messageParts","messagePart","argument","multiline","because","reason","indexOf","marginTop","fontSize","lineHeight","paddingBottom","JsonItem_JsonItem","ListHeader","_this$props$text","text","font","LogList","_this$props$header","header","_this$props$items","ListHeader_ListHeader","overflowY","maxHeight","minHeight","borderRadius","borderCollapse","item","LogMessage_LogMessage","JsonList","_this$props$reverseIn","reverseIndex","length","Grid","_this$props$entities","_this$props$entities$","activeExpectations","_this$props$entities$2","proxiedRequests","_this$props$entities$3","recordedRequests","_this$props$entities$4","logMessages","className","borderStyle","borderWidth","LogList_LogList","JsonList_JsonList","float","borderRightStyle","borderRightWidth","_state$entities","_state$entities$activ","_state$entities$proxi","_state$entities$recor","_state$entities$logMe","_state$requestFilter","App","components_RequestFilter","containers_Grid","window","location","search","parse","hostname","protocol","store","configureStore","render","es","App_App","document","getElementById","arguments","action","rootReducer","combineReducers","middleware_socket","socket","connected","close","connectSocket","WebSocket","onmessage","event","JSON","data","onclose","onopen","readyState","send","stringify","exposeState","objectSpread","getState","preloadedState","createStore","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.fa6b1251.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n    module.exports = require('./configureStore.prod')\n} else {\n    module.exports = require('./configureStore.dev')\n}\n","export const CONNECT_SOCKET = 'CONNECT_SOCKET';\n\nconst connectWebSocket = (host, port, secure, contextPath) => ({\n    type: CONNECT_SOCKET,\n    host: host,\n    port: port,\n    secure: secure,\n    contextPath: contextPath\n});\n\nexport const connectSocket = (host, port, secure, contextPath) => (dispatch) => {\n    return dispatch(connectWebSocket(host, port, secure, contextPath));\n};\n\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\n\nconst sendWebSocketMessage = (message, host, port, secure) => ({\n    type: SEND_MESSAGE,\n    message: message,\n    host: host,\n    port: port,\n    secure: secure\n});\n\nexport const sendMessage = (message, host, port, secure) => (dispatch) => {\n    return dispatch(sendWebSocketMessage(message, host, port, secure));\n};\n\nexport const MESSAGE_RECEIVED = 'MESSAGE_RECEIVED';\n\nexport const webSocketMessageReceived = (message) => ({\n    type: MESSAGE_RECEIVED,\n    entities: message\n});\n\nexport const DISCONNECT_SOCKET = 'DISCONNECT_SOCKET';\n\nconst disconnectWebSocket = () => ({\n    type: DISCONNECT_SOCKET\n});\n\nexport const disconnectSocket = () => (dispatch) => {\n    return dispatch(disconnectWebSocket());\n};\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Field, FieldArray, formValueSelector, reduxForm} from 'redux-form';\nimport {\n    AutoComplete as MUIAutoComplete,\n    Card,\n    CardHeader,\n    CardText,\n    FloatingActionButton,\n    MenuItem,\n    IconButton\n} from 'material-ui';\nimport ContentAdd from 'material-ui/svg-icons/content/add';\nimport ContentRemove from 'material-ui/svg-icons/content/remove';\nimport PropTypes from \"prop-types\";\nimport {AutoComplete, SelectField, TextField, Toggle,} from 'redux-form-material-ui';\nimport {disconnectSocket, sendMessage} from \"../actions\";\n\nlet filterNullsMultiValue = function (rawItems) {\n    let items = undefined;\n    for (let rawItem of rawItems) {\n        let valueSet = false;\n        for (let value of rawItem.values) {\n            if (value) {\n                valueSet = true;\n            }\n        }\n        if (rawItem.name && valueSet) {\n            if (!items) {\n                items = [];\n            }\n            items.push(rawItem);\n        }\n    }\n    return items;\n};\nlet filterNullsSingleValue = function (rawItems) {\n    let items = undefined;\n    for (let rawItem of rawItems) {\n        if (rawItem.name && rawItem.value) {\n            if (!items) {\n                items = [];\n            }\n            items.push(rawItem);\n        }\n    }\n    return items;\n};\nconst loadData = ({host = \"127.0.0.1\", port = \"1080\", secure = true, requestMatcher = {}, sendMessage}) => {\n    let requestFilter = {\n        method: undefined,\n        path: undefined,\n        keepAlive: undefined,\n        secure: undefined,\n        headers: undefined,\n        queryStringParameters: undefined,\n        cookies: undefined,\n    };\n    if (requestMatcher.enabled) {\n        requestFilter = {\n            method: requestMatcher.method,\n            path: requestMatcher.path,\n            keepAlive: requestMatcher.keepAlive ? true : undefined,\n            secure: requestMatcher.secure ? true : undefined,\n            headers: undefined,\n            queryStringParameters: undefined,\n            cookies: undefined,\n        };\n        requestFilter.cookies = filterNullsSingleValue(requestMatcher.cookies);\n        requestFilter.headers = filterNullsMultiValue(requestMatcher.headers);\n        requestFilter.queryStringParameters = filterNullsMultiValue(requestMatcher.queryStringParameters);\n    }\n    sendMessage(requestFilter, host, port, secure);\n};\n\nclass RequestFilter extends Component {\n    static propTypes = {\n        host: PropTypes.string.isRequired,\n        port: PropTypes.string.isRequired,\n        secure: PropTypes.bool.isRequired\n    };\n\n    componentWillUnmount() {\n        this.props.disconnectSocket()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.requestMatcher !== this.props.requestMatcher || nextProps.expanded !== this.props.expanded) {\n            loadData(nextProps)\n        }\n    }\n\n    renderValues = ({fields, disabled}) => {\n        return (\n            <div style={{\n                width: \"50%\",\n                padding: \"5px\",\n                paddingRight: \"10px\",\n                display: \"inline-block\",\n                verticalAlign: \"bottom\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"70%\",\n                }}>\n\n                    <Field\n                        disabled={disabled}\n                        fullWidth={true}\n                        style={{\n                            width: \"75%\",\n                        }}\n                        name={field}\n                        component={TextField}\n                        hintText=\"Value\"\n                        onChange={(e) => {\n                            console.log(e)\n                        }}\n                        floatingLabelText=\"Value\"\n                    />\n                    {index > 0 ?\n                        <IconButton style={{\n                            display: \"inline-block\",\n                            verticalAlign: \"bottom\",\n                            minWidth: \"28px\",\n                            width: \"28px\",\n                        }} disabled={disabled} onClick={() => fields.remove(index)}>\n                            <ContentRemove/>\n                        </IconButton>\n                        : \"\"}\n\n                </div>)}\n                <IconButton style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                    minWidth: \"28px\",\n                    width: \"28px\",\n                }} disabled={disabled} onClick={() => fields.push(\"\")}>\n                    <ContentAdd/>\n                </IconButton>\n            </div>)\n    };\n    renderKeysToMultiValues = ({fields, disabled, title}) => {\n        return (<div style={{\n            width: \"100%\",\n            display: \"inline-block\",\n            paddingRight: \"10px\",\n        }}>\n            <div style={{\n                color: disabled ? \"#9c9c9c\" : \"rgb(0, 188, 212)\",\n                width: \"20%\",\n                paddingTop: \"45px\",\n                paddingRight: \"15px\",\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                textAlign: \"right\",\n                fontFamily: \"Roboto, sans-serif\",\n            }}>{title}\n            </div>\n            <div style={{\n                display: \"inline-block\",\n                width: \"75%\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"80%\",\n                }}>\n                    <div style={{\n                        width: \"30%\",\n                        padding: \"5px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"top\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            name={`${field}.name`}\n                            component={AutoComplete}\n                            hintText=\"Name\"\n                            floatingLabelText=\"Name\"\n                            fullWidth={true}\n                            openOnFocus\n                            filter={MUIAutoComplete.fuzzyFilter}\n                            dataSource={[]}\n                        />\n                    </div>\n                    <FieldArray name={`${field}.values`} component={this.renderValues} disabled={disabled}/>\n                    {index > 0 ? <FloatingActionButton mini={true} style={{\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\"\n                    }} disabled={disabled} onClick={() => fields.remove(index)}>\n                        <ContentRemove/>\n                    </FloatingActionButton> : \"\"}\n                </div>)}\n                <FloatingActionButton mini={true} style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                }} disabled={disabled} onClick={() => fields.push({\n                    values: [\"\"]\n                })}>\n                    <ContentAdd/>\n                </FloatingActionButton>\n            </div>\n        </div>)\n    };\n    renderKeysToValues = ({fields, disabled, title}) => {\n        return (<div style={{\n            width: \"100%\",\n            display: \"inline-block\",\n            paddingRight: \"10px\",\n        }}>\n            <div style={{\n                color: disabled ? \"#9c9c9c\" : \"rgb(0, 188, 212)\",\n                width: \"20%\",\n                paddingTop: \"45px\",\n                paddingRight: \"15px\",\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                textAlign: \"right\",\n                fontFamily: \"Roboto, sans-serif\",\n            }}>{title}\n            </div>\n            <div style={{\n                display: \"inline-block\",\n                width: \"75%\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"80%\",\n                }}>\n                    <div style={{\n                        width: \"30%\",\n                        padding: \"5px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"top\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            name={`${field}.name`}\n                            component={AutoComplete}\n                            hintText=\"Name\"\n                            floatingLabelText=\"Name\"\n                            fullWidth={true}\n                            openOnFocus\n                            filter={MUIAutoComplete.fuzzyFilter}\n                            dataSource={[]}\n                        />\n                    </div>\n                    <div style={{\n                        width: \"45%\",\n                        padding: \"5px\",\n                        paddingRight: \"10px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            fullWidth={true}\n                            name={`${field}.value`}\n                            component={TextField}\n                            hintText=\"Value\"\n                            floatingLabelText=\"Value\"\n                        />\n                    </div>\n                    {index > 0 ? <FloatingActionButton mini={true} style={{\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\"\n                    }} disabled={disabled} onClick={() => fields.remove(index)}>\n                        <ContentRemove/>\n                    </FloatingActionButton> : \"\"}\n                </div>)}\n                <FloatingActionButton mini={true} style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                }} disabled={disabled} onClick={() => fields.push({})}>\n                    <ContentAdd/>\n                </FloatingActionButton>\n            </div>\n        </div>)\n    };\n\n    render() {\n        const disabled = !this.props.requestMatcher.enabled;\n        return (\n            <div style={{\n                margin: \"1%\",\n                width: \"98%\"\n            }}>\n                <Card expanded={this.expanded}>\n                    <CardHeader\n                        title=\"Filter\"\n                        actAsExpander={true}\n                        showExpandableButton={true}\n                        style={{\n                            backgroundColor: disabled ? \"rgba(220, 220, 220, 0.5)\" : \"rgba(0, 188, 212, 0.75)\"\n                        }}\n                    />\n                    <CardText expandable={true}>\n                        <div style={{\n                            display: \"inline\"\n                        }}>\n                            <div style={{\n                                width: \"10%\",\n                                display: \"inline-block\",\n                                verticalAlign: \"top\",\n                            }}>\n                                <div style={{\n                                    paddingRight: \"10px\",\n                                    padding: \"5px\",\n                                    display: \"inline-block\",\n                                }}>\n                                    <Field\n                                        name=\"enabled\"\n                                        component={Toggle}\n                                        label=\"Enabled\"\n                                        labelPosition=\"left\"\n                                    />\n                                </div>\n                            </div>\n                            <div style={{\n                                width: \"90%\",\n                                display: \"inline-block\",\n                                verticalAlign: \"bottom\",\n                                marginBottom: \"2%\",\n                            }}>\n                                <div style={{\n                                    width: \"32%\",\n                                    paddingLeft: \"3%\",\n                                    display: \"inline-block\",\n                                    verticalAlign: \"top\",\n                                }}>\n                                    <div>\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"top\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"method\"\n                                                component={SelectField}\n                                                fullWidth={true}\n                                                floatingLabelText=\"Method\"\n                                            >\n                                                <MenuItem value=\"\" primaryText=\"\" />\n                                                <MenuItem value=\"CONNECT\" primaryText=\"CONNECT\" />\n                                                <MenuItem value=\"DELETE\" primaryText=\"DELETE\" />\n                                                <MenuItem value=\"GET\" primaryText=\"GET\" />\n                                                <MenuItem value=\"HEAD\" primaryText=\"HEAD\" />\n                                                <MenuItem value=\"OPTIONS\" primaryText=\"OPTIONS\" />\n                                                <MenuItem value=\"PATCH\" primaryText=\"PATCH\" />\n                                                <MenuItem value=\"POST\" primaryText=\"POST\" />\n                                                <MenuItem value=\"PUT\" primaryText=\"PUT\" />\n                                                <MenuItem value=\"TRACE\" primaryText=\"TRACE\" />\n                                            </Field>\n                                        </div>\n\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"top\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"path\"\n                                                component={TextField}\n                                                fullWidth={true}\n                                                hintText=\"Path\"\n                                                floatingLabelText=\"Path\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"bottom\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"secure\"\n                                                component={Toggle}\n                                                label=\"Secure\"\n                                                labelPosition=\"right\"\n                                            />\n                                        </div>\n\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"bottom\",\n                                            overflow: \"none\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"keepAlive\"\n                                                component={Toggle}\n                                                label=\"Keep-Alive\"\n                                                labelPosition=\"right\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{\n                                    width: \"65%\",\n                                    display: \"inline-block\",\n                                    verticalAlign: \"bottom\",\n                                }}>\n                                    <div>\n                                        <FieldArray name={`headers`} component={this.renderKeysToMultiValues}\n                                                    disabled={disabled} title={\"Headers:\"}/>\n                                        <FieldArray name={`cookies`} component={this.renderKeysToValues}\n                                                    disabled={disabled}\n                                                    title={\"Cookies:\"}/>\n                                        <FieldArray name={`queryStringParameters`}\n                                                    component={this.renderKeysToMultiValues}\n                                                    disabled={disabled} title={\"Query Parameters:\"}/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </CardText>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst formName = 'requestFilter';\nconst selector = formValueSelector(formName);\n\nRequestFilter = reduxForm({\n    form: formName,\n    initialValues: {\n        headers: [{\n            values: [\"\"]\n        }],\n        queryStringParameters: [{\n            values: [\"\"]\n        }],\n        cookies: [{}],\n    },\n    destroyOnUnmount: false\n})(RequestFilter);\n\nconst mapStateToProps = (state, props) => {\n    return {\n        requestMatcher: selector(state, 'enabled', 'method', 'path', 'keepAlive', 'secure', 'headers', 'queryStringParameters', 'cookies'),\n        expanded: state.requestFilterExpanded,\n    }\n};\n\nconst mapDispatchToProps = {\n    sendMessage,\n    disconnectSocket\n};\n\nRequestFilter = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    undefined,\n    {pure: true}\n)(RequestFilter);\n\nexport default RequestFilter;","import React, {Component} from 'react';\nimport ReactJson from 'react-json-view';\nimport PropTypes from \"prop-types\";\nimport './jsonItem.css';\n\nexport default class JsonItem extends Component {\n    static propTypes = {\n        description: PropTypes.oneOfType([PropTypes.object.isRequired, PropTypes.string.isRequired]),\n        jsonItem: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.array.isRequired]).isRequired,\n    };\n\n    render() {\n        const {\n            collapsed = 0,\n            jsonItem = null,\n            description = null,\n            display = \"inline-block\",\n            enableClipboard = true,\n            textStyle = {}\n        } = this.props;\n\n        function addDescription(description, jsonDiv) {\n            if (description.json) {\n                return <div key={\"description\"}\n                            style={{display: \"table-row\"}}>\n                    <JsonItem key={\"description_first\"}\n                              index={null}\n                              collapsed=\"0\"\n                              display={\"inline-block\"}\n                              textStyle={{\n                                  fontFamily: \"monospace, Roboto, sans-serif\",\n                                  display: \"table-cell\",\n                                  padding: \"5px\",\n                              }}\n                              enableClipboard={false}\n                              jsonItem={description.first}/>\n                    <JsonItem key={\"description_object\"}\n                              index={null}\n                              collapsed=\"0\"\n                              display={\"table-cell\"}\n                              textStyle={{\n                                  fontFamily: \"monospace, Roboto, sans-serif\",\n                                  display: \"table-cell\",\n                                  verticalAlign: \"top\",\n                                  padding: \"5px\",\n                              }}\n                              enableClipboard={false}\n                              jsonItem={description.object}/>\n                    <JsonItem key={\"description_second\"}\n                              index={null}\n                              collapsed=\"0\"\n                              display={\"inline-block\"}\n                              textStyle={{\n                                  fontFamily: \"monospace, Roboto, sans-serif\",\n                                  display: \"table-cell\",\n                                  padding: \"5px\",\n                              }}\n                              enableClipboard={false}\n                              jsonItem={description.second}/>\n                    {jsonDiv}\n                </div>;\n            } else {\n                return (<div key={\"wrap_div\"}>\n                    <JsonItem key={\"description\"}\n                              index={null}\n                              collapsed=\"0\"\n                              display={\"inline-block\"}\n                              textStyle={{\n                                  fontFamily: \"monospace, Roboto, sans-serif\",\n                                  display: \"table-cell\",\n                                  padding: \"5px\",\n                              }}\n                              enableClipboard={false}\n                              jsonItem={description}/>\n                    {jsonDiv}\n                </div>);\n            }\n        }\n\n        if (typeof jsonItem === \"object\" || Array.isArray(jsonItem)) {\n            if (description) {\n                return addDescription(description, <ReactJson src={jsonItem}\n                                                              key={\"json\"}\n                                                              style={{\n                                                                  whiteSpace: \"nowrap\",\n                                                                  paddingTop: \"6px\",\n                                                                  top: \"-2px\",\n                                                                  display: display,\n                                                              }}\n                                                              name={null}\n                                                              theme={\"tomorrow\"}\n                                                              iconStyle={\"triangle\"}\n                                                              indentWidth={4}\n                                                              collapsed={collapsed != null ? collapsed : 0}\n                                                              shouldCollapse={() => {\n                                                                  return false\n                                                              }}\n                                                              enableClipboard={enableClipboard}\n                                                              displayObjectSize={false}\n                                                              displayDataTypes={false}\n                                                              onEdit={false}\n                                                              onAdd={false}\n                                                              onDelete={false}/>);\n            } else {\n                return (<ReactJson src={jsonItem}\n                                   key={\"json\"}\n                                   style={{\n                                       whiteSpace: \"nowrap\",\n                                       paddingLeft: \"5px\",\n                                       top: \"-1px\",\n                                       display: display\n                                   }}\n                                   name={null}\n                                   theme={\"tomorrow\"}\n                                   iconStyle={\"triangle\"}\n                                   indentWidth={4}\n                                   collapsed={collapsed != null ? collapsed : 0}\n                                   shouldCollapse={() => {\n                                       return false\n                                   }}\n                                   enableClipboard={enableClipboard}\n                                   displayObjectSize={false}\n                                   displayDataTypes={false}\n                                   onEdit={false}\n                                   onAdd={false}\n                                   onDelete={false}/>);\n            }\n        } else if (typeof jsonItem === \"string\") {\n            return (<pre style={textStyle}>{jsonItem}</pre>);\n        } else {\n            return (<div/>);\n        }\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport JsonItem from \"./JsonItem\";\nimport './log.css';\n\nexport default class LogMessage extends Component {\n    static propTypes = {\n        logMessage: PropTypes.object.isRequired\n    };\n    cellStyle = {\n        display: \"table-cell\",\n        fontFamily: \"monospace, Roboto, sans-serif\"\n    };\n\n    render() {\n        const {\n            logMessage = {},\n        } = this.props;\n        return (<div style={logMessage.style}>\n            <div style={Object.assign({\n                whiteSpace: \"pre\",\n            }, this.cellStyle)}>{logMessage.description}</div>\n            {logMessage.messageParts.map((messagePart) => {\n                if (!messagePart.argument) {\n                    return <div key={messagePart.key}\n                                style={this.cellStyle}>{messagePart.value}</div>;\n                } else {\n                    if (messagePart.multiline || messagePart.because) {\n                        let reason = messagePart.value.map(\n                            (reason, index) => {\n                                let color = \"rgb(255, 255, 255)\";\n                                if (messagePart.because) {\n                                    if (reason.indexOf(\"matched\") !== -1) {\n                                        color = \"rgb(107, 199, 118)\";\n                                    } else if (reason.indexOf(\"didn't match\") !== -1) {\n                                        color = \"rgb(216, 88, 118)\";\n                                    } else {\n                                        color = \"rgb(255, 255, 255)\";\n                                    }\n                                }\n                                return <span key={messagePart.key + \"_\" + index}\n                                             style={{\n                                                 marginTop: \"-10px\",\n                                                 color: color,\n                                                 display: \"block\",\n                                                 fontSize: \"0.95em\",\n                                                 lineHeight: \"1.5em\",\n                                                 whiteSpace: \"pre\",\n                                                 paddingLeft: \"20px\",\n                                                 paddingBottom: \"10px\",\n                                             }}>{reason}</span>\n                            }\n                        );\n                        return <div key={messagePart.key}\n                                    style={Object.assign({paddingLeft: \"5px\",}, this.cellStyle)}>\n                            <details>\n                                <summary style={{\n                                    color: \"rgb(222, 147, 95)\",\n                                    fontSize: \"19px\",\n                                    lineHeight: \"25px\",\n                                    paddingLeft: \"5px\",\n                                    paddingTop: \"0px\",\n                                    marginTop: \"-1px\",\n                                }}><span>...</span>\n                                </summary>\n                                {reason}\n                            </details>\n                        </div>;\n                    } else if (messagePart.json) {\n                        return <JsonItem key={messagePart.key}\n                                         index={null}\n                                         collapsed=\"0\"\n                                         display={\"table-cell\"}\n                                         textStyle={{\n                                             fontFamily: \"monospace, Roboto, sans-serif\",\n                                             backgroundColor: \"rgb(29, 31, 33)\",\n                                             display: \"table-cell\",\n                                             verticalAlign: \"top\",\n                                             padding: \"2px\",\n                                         }}\n                                         enableClipboard={false}\n                                         jsonItem={messagePart.value}/>;\n                    } else {\n                        return <div key={messagePart.key}\n                                    style={{\n                                        fontFamily: \"Roboto, sans-serif\",\n                                        color: \"rgb(255, 255, 255)\",\n                                        display: \"table-cell\",\n                                        paddingLeft: \"5px\",\n                                        paddingRight: \"5px\",\n                                        whiteSpace: \"pre\",\n                                    }}>{messagePart.value}</div>;\n                    }\n                }\n            })}\n        </div>)\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ListHeader extends Component {\n    static propTypes = {\n        text: PropTypes.string.isRequired\n    };\n\n    render() {\n        const {\n            text = \"\"\n        } = this.props;\n        return (\n            <div style={{\n                font: \"1.25em 'Averia Sans Libre', Helvetica, Arial, sans-serif\",\n                margin: \"0px 0px 3px 2px\"\n            }}>{text}</div>\n        )\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport LogMessage from \"../components/LogMessage\";\nimport ListHeader from \"../components/ListHeader\";\n\nexport default class LogList extends Component {\n    static propTypes = {\n        header: PropTypes.string.isRequired,\n        items: PropTypes.arrayOf(PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            value: PropTypes.object.isRequired\n        })).isRequired,\n    };\n\n    render() {\n        const {\n            header = \"\",\n            items = [],\n        } = this.props;\n        return (\n            <div style={{\n                padding: \"2px 0\"\n            }}>\n                <ListHeader text={header}/>\n                <div style={{\n                    overflowY: \"scroll\",\n                    maxHeight: \"400px\",\n                    minHeight: \"100px\",\n                    borderRadius: \"5px\",\n                    margin: \"2px 0px 3px\",\n                    padding: \"5px\",\n                    backgroundColor: \"rgb(29, 31, 33)\",\n                    color: \"rgb(250, 250, 250)\",\n                }}>\n                    <div style={\n                        {\n                            borderCollapse: \"collapse\",\n                            display: \"table\",\n                            minWidth: \"100%\"\n                        }\n                    }>\n                        {items.map((item, index) => <LogMessage index={index}\n                                                                      key={item.key}\n                                                                      logMessage={item.value}/>)}\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ListHeader from \"../components/ListHeader\";\nimport JsonItem from \"../components/JsonItem\";\n\nexport default class JsonList extends Component {\n    static propTypes = {\n        header: PropTypes.string.isRequired,\n        items: PropTypes.arrayOf(PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            description: PropTypes.oneOfType([PropTypes.object.isRequired, PropTypes.string.isRequired]).isRequired,\n            value: PropTypes.object.isRequired\n        })).isRequired,\n    };\n\n    render() {\n        const {\n            header = \"\",\n            items = [],\n            reverseIndex = true\n        } = this.props;\n        return (\n            <div style={{\n                padding: \"2px 0\"\n            }}>\n                <ListHeader text={header}/>\n                <div style={{\n                    overflowY: \"scroll\",\n                    maxHeight: \"400px\",\n                    minHeight: \"100px\",\n                    borderRadius: \"5px\",\n                    margin: \"2px 0px 3px\",\n                    padding: \"5px\",\n                    backgroundColor: \"rgb(29, 31, 33)\",\n                    color: \"rgb(250, 250, 250)\",\n                }}>\n                    {items.map((item, index) => {\n                        return <JsonItem index={reverseIndex ? items.length - index : index + 1}\n                                         key={item.key}\n                                         display={\"table-cell\"}\n                                         description={item.description}\n                                         jsonItem={item.value}/>;\n                    })}\n                </div>\n            </div>\n        );\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport LogList from \"../containers/LogList\";\nimport JsonList from \"../containers/JsonList\";\nimport './grid.css';\n\nclass Grid extends Component {\n    static propTypes = {\n        entities: PropTypes.shape({\n            activeExpectations: PropTypes.array.isRequired,\n            proxiedRequests: PropTypes.array.isRequired,\n            recordedRequests: PropTypes.array.isRequired,\n            logMessages: PropTypes.array.isRequired,\n        }).isRequired,\n        requestFilter: PropTypes.object.isRequired,\n    };\n\n    render() {\n        const {\n            entities: {\n                activeExpectations = [],\n                proxiedRequests = [],\n                recordedRequests = [],\n                logMessages = [],\n            },\n        } = this.props;\n        return (\n            <div style={{\n                margin: \"1%\",\n                width: \"98%\"\n            }}>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"1100px\",\n                }}>\n                    <LogList items={logMessages}\n                             header={\"Log Messages (most recent at the top)\"}/>\n                </div>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"1100px\",\n                }}>\n                    <JsonList items={activeExpectations}\n                              header={\"Active Expectations (in the order they are applied)\"}\n                              reverseIndex={false}/>\n                </div>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"1100px\",\n                }}>\n                    <div style={{\n                        width: \"49%\",\n                        minWidth: \"500px\",\n                        float: \"left\",\n                        padding: \"0\",\n                        paddingRight: \"1%\",\n                        borderRightStyle: \"dashed\",\n                        borderRightWidth: \"1px\",\n                    }}>\n                        <JsonList items={recordedRequests}\n                                  header={\"Received Requests (most recent at the top)\"}/>\n                    </div>\n                    <div style={{\n                        width: \"49%\",\n                        minWidth: \"500px\",\n                        float: \"right\"\n                    }}>\n                        <JsonList items={proxiedRequests}\n                                  header={\"Proxied Requests (most recent at the top)\"}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {\n        activeExpectations = [],\n        proxiedRequests = [],\n        recordedRequests = [],\n        logMessages = [],\n    } = state.entities;\n\n    const {\n        requestFilter = {}\n    } = state;\n\n    return {\n        entities: {\n            activeExpectations,\n            proxiedRequests,\n            recordedRequests,\n            logMessages,\n        },\n        requestFilter\n    }\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid)\n","import React, {Component} from 'react';\nimport RequestFilter from \"../components/RequestFilter\";\nimport Grid from './Grid';\nimport {parse} from 'query-string';\n\nexport default class App extends Component {\n    static host() {\n        if (window.location.search && parse(window.location.search).host) {\n            return parse(window.location.search).host;\n        } else if (window.location.hostname) {\n            return window.location.hostname;\n        }\n        return window.location.hostname;\n    }\n\n    static port() {\n        if (window.location.search && parse(window.location.search).port) {\n            return parse(window.location.search).port;\n        } else if (window.location.port) {\n            return window.location.port;\n        } else if (window.location.protocol === \"https:\") {\n            return 443;\n        } else {\n            return 80;\n        }\n    }\n\n    static secure() {\n        if (window.location.protocol) {\n            return window.location.protocol === \"https:\";\n        } else {\n            return false;\n        }\n    }\n\n    render() {\n        return (<div>\n            <RequestFilter host={App.host()} port={App.port()} secure={App.secure()}/>\n            <Grid/>\n        </div>)\n    }\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport App from './containers/App'\nimport configureStore from './store/configureStore'\nimport {MuiThemeProvider} from \"material-ui\";\n\nconst store = configureStore();\n\nrender(\n    <Provider store={store}>\n        <MuiThemeProvider>\n            <App/>\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('app')\n);\n","import {MESSAGE_RECEIVED} from '../actions'\n\nconst entities = (state = {\n    activeExpectations: [],\n    proxiedRequests: [],\n    recordedRequests: [],\n    logMessages: []\n}, action) => {\n    if (action.type === MESSAGE_RECEIVED && action.entities) {\n        return {\n            activeExpectations: action.entities.activeExpectations ? action.entities.activeExpectations : [],\n            proxiedRequests: action.entities.proxiedRequests ? action.entities.proxiedRequests : [],\n            recordedRequests: action.entities.recordedRequests ? action.entities.recordedRequests : [],\n            logMessages: action.entities.logMessages\n        };\n    }\n    return state;\n};\n\nexport default entities","import {combineReducers} from 'redux'\nimport {reducer as form} from 'redux-form'\nimport entities from './entities'\n\nconst rootReducer = combineReducers({\n    entities,\n    form,\n});\n\nexport default rootReducer","import {CONNECT_SOCKET, DISCONNECT_SOCKET, SEND_MESSAGE, webSocketMessageReceived} from '../actions'\n\nexport default (function () {\n    let socket = null;\n    let connected = false;\n\n    let disconnectSocket = function () {\n        connected = false;\n        if (socket != null) {\n            socket.close()\n        }\n        socket = null\n    };\n    let connectSocket = function (action, next) {\n        if (socket != null) {\n            socket.close()\n        }\n        socket = new WebSocket((action.secure ? \"wss\" : \"ws\") + \"://\" + action.host + \":\" + action.port + \"/_mockserver_ui_websocket\");\n        socket.onmessage = (event) => {\n            next(webSocketMessageReceived(\n                JSON.parse(event.data)\n            ))\n        };\n        socket.onclose = () => {\n            disconnectSocket();\n        };\n        socket.onopen = () => {\n            connected = true;\n            if (socket && action.message && socket.readyState === 1) {\n                socket.send(JSON.stringify(action.message))\n            }\n        }\n    };\n    return store => next => action => {\n        switch (action.type) {\n            case CONNECT_SOCKET:\n                connectSocket(action, next);\n                break;\n            case DISCONNECT_SOCKET:\n                disconnectSocket();\n                break;\n            case SEND_MESSAGE:\n                if (connected) {\n                    socket.send(JSON.stringify(action.message))\n                } else {\n                    connectSocket(action, next)\n                }\n                break;\n            default:\n                // listen for changes here\n                return next(action)\n        }\n    }\n})()","export default store => next => action => {\n    next({ ...action, getState: store.getState });\n}","import {applyMiddleware, createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\nimport socket from '../middleware/socket'\nimport exposeState from \"../middleware/exposeState\";\n\nconst configureStore = preloadedState => {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunk, socket, exposeState)\n    )\n};\n\nexport default configureStore\n"],"sourceRoot":""}